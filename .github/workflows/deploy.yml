name: Deploy Main to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/lams-frontend:latest .

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/lams-frontend:latest

      - name: Copy docker-compose.yml to VPS
        uses: appleboy/scp-action@v0.1.0
        with:
          host: ${{ secrets.VPS_HOST_PROD }}
          username: ${{ secrets.VPS_USER_PROD }}
          key: ${{ secrets.VPS_SSH_KEY_PROD }}
          source: "./docker-compose.yml"
          target: "/opt/lams/lams-front"
          overwrite: true

      - name: Log in to Docker Hub on VPS and deploy
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_HOST_PROD }}
          username: ${{ secrets.VPS_USER_PROD }}
          key: ${{ secrets.VPS_SSH_KEY_PROD }}
          script: |
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            cd /opt/lams/lams-front

            # Очищаем только старые образы фронтенда
            # Находим ID образа текущего фронтенда
            CURRENT_FRONTEND_IMAGE=$(docker images ${{ secrets.DOCKER_USERNAME }}/lams-frontend:latest -q)
            
            # Удаляем только старые образы фронтенда, сохраняя текущий
            if [ ! -z "$CURRENT_FRONTEND_IMAGE" ]; then
              docker images | grep "${{ secrets.DOCKER_USERNAME }}/lams-frontend" | grep -v "$CURRENT_FRONTEND_IMAGE" | awk '{print $3}' | xargs -r docker rmi
            fi
            
            # Удаляем только dangling образы (без тегов)
            docker image prune -f

            docker-compose pull
            docker-compose up -d
